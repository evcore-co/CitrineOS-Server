name: Node.js CI/CD Pipeline

on:
  push:
    branches:
      - "*"
    tags:
      - "*"
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    runs-on: ubuntu-latest
    env:
      NODE_PROJECT_DIR: citrineos-core
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          # caching node_modules
          path: ${{ env.NODE_PROJECT_DIR }}/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('citrineos-core/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: |
          cd $NODE_PROJECT_DIR
          npm run install-all

      - name: Build
        run: |
          cd $NODE_PROJECT_DIR
          npm run build

      - name: Upload Build Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: node-build-artifacts
          path: ${{ env.NODE_PROJECT_DIR }}/dist

  unit-test:
    env:
      NODE_PROJECT_DIR: citrineos-core
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          # caching node_modules
          path: ${{ env.NODE_PROJECT_DIR }}/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('citrineos-core/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
  
      - name: Install dependencies
        run: |
          cd ${{ env.NODE_PROJECT_DIR }}
          npm run install-all

      - name: Run Unit Tests
        run: |
          cd ${{ env.NODE_PROJECT_DIR }}
          npm test

  # lint:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #       with:
  #         submodules: true

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '18'
  #         cache: 'npm'

  #     - name: Lint Code
  #       run: |
  #         cd citrineos-core
  #         npm run lint

  # npm-audit:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #       with:
  #         submodules: true

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '18'
  #         cache: 'npm'

  #     - name: Audit Packages
  #       run: |
  #         cd citrineos-core
  #         npm run install-all
  #         npm audit --audit-level=low
  #       continue-on-error: true

  # npm-outdated:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   if: "github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/release')"
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #       with:
  #         submodules: true

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '18'
  #         cache: 'npm'

  #     - name: Check outdated packages
  #       run: |
  #         cd citrineos-core
  #         npm run install-all
  #         npm outdated --omit=dev

  # njsscan:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   container: python:3
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #       with:
  #         submodules: true

  #     - name: Install njsscan
  #       run: pip3 install --upgrade njsscan

  #     - name: Run njsscan
  #       run: |
  #         cd citrineos-core
  #         npm run install-all
  #         njsscan .
