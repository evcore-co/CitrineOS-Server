name: Node.js CI/CD Pipeline

on:
  push:
    branches:
      - "*"
    tags:
      - "*"
  pull_request:
    types: [opened, synchronize, reopened]

env:
  NODE_PROJECT_DIR: citrineos-core
  NODE_VERSION: 18

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true
      # Detect file changes
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v42
        with:
          files: ${{ env.NODE_PROJECT_DIR }}/**  # Replace with your directory path

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ env.NODE_PROJECT_DIR }}/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        working-directory: ${{ env.NODE_PROJECT_DIR }}
        run: npm run install-all

      - name: Build
        if: steps.changed-files.outputs.any_changed == 'true'
        working-directory: ${{ env.NODE_PROJECT_DIR }}
        run: npm run build

      - name: Upload Build Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: node-build-artifacts
          path: ${{ env.NODE_PROJECT_DIR }}/dist

      - name: Get changed files in the citrineOS directory
        id: update-citrineos-dir
        uses: tj-actions/changed-files@v45
        with:
          files: ${{ env.NODE_PROJECT_DIR }}/**

  unit-test:
    needs: [build ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ env.NODE_PROJECT_DIR }}/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        working-directory: ${{ env.NODE_PROJECT_DIR }}
        run: npm run install-all

      - name: Run Unit Tests
        working-directory: ${{ env.NODE_PROJECT_DIR }}
        if: steps.changed-files.outputs.any_changed == 'true'
        run: npm run test
        continue-on-error: true

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ env.NODE_PROJECT_DIR }}/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        working-directory: ${{ env.NODE_PROJECT_DIR }}
        run: npm run install-all
        
      - name: Lint Code
        working-directory: ${{ env.NODE_PROJECT_DIR }}
        run: npm run lint

  npm-audit:
    needs: [build, unit-test, lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ env.NODE_PROJECT_DIR }}/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        working-directory: ${{ env.NODE_PROJECT_DIR }}
        run: npm run install-all

      - name: Audit Packages
        working-directory: ${{ env.NODE_PROJECT_DIR }}
        run: npm audit --audit-level=low
        continue-on-error: true

  npm-outdated:
    needs: [build, unit-test, lint]
    runs-on: ubuntu-latest
    if: "github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/release')"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ env.NODE_PROJECT_DIR }}/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        working-directory: ${{ env.NODE_PROJECT_DIR }}
        run: npm run install-all

  njsscan:
    needs: [build, unit-test, lint]
    runs-on: ubuntu-latest
    container: python:3
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ env.NODE_PROJECT_DIR }}/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        working-directory: ${{ env.NODE_PROJECT_DIR }}
        run: npm run install-all

      - name: Install njsscan
        run: pip3 install --upgrade njsscan

      - name: Run njsscan
        working-directory: ${{ env.NODE_PROJECT_DIR }}
        run: njsscan .
